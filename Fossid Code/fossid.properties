api_url = https://fossid.comcast.com/webapp/api.php
api_user = rdkjenkins03
api_key = fe09d69c
# Use case. At this moment there are 2 use cases. Target path needs to be adjusted depnding on use case. See below
# Use case = 1, a new scan is created for each commit in Gerrit.
# Use case = 2, there is a single scan with the name of the branch, only the delta is scanned
use_case = 1
#Number of times Jenkins will check if FOSSID scan finished
fossid_scan_number_of_tries = 100
# Wait time in seconds between each API call to check if scan finished
fossid_scan_wait_time = 10
# A command or a script that creates the folder structure based on  $GERRIT_PROJECT and $GERRIT_CHANGE_ID for "use_case" = 1
# or based on #GERRIT_PROJECT and $GERRIT_BRANCH for useCase = 2.
# Example /some/path/$GERRIT_PROJECT/$GERRIT_CHANGE_ID
cmd_create_target_path = ssh rdkjenkins03@fossid.comcast.com mkdir -p /home/rdkjenkins03/$GERRIT_PROJECT/$GERRIT_CHANGE_ID
# Target path that will be used when creating the scan using the FOSSID API
target_path = /home/rdkjenkins03/$GERRIT_PROJECT/$GERRIT_CHANGE_ID
# A command or script which copies the pathset from Gerrit to the target path
# Sugestion for how to download patchset from Gerrit:  curl -o /var/jenkins_home/downloads/$GERRIT_PATCHSET_REVISION.zip http://gerrit:8080/changes/$GERRIT_CHANGE_NUMBER/revisions/$GERRIT_PATCHSET_REVISION/patch?zip
cmd_copy_patch_files_to_target_path = $JENKINS_HOME/get_review_from_gerrit.py $GERRIT_CHANGE_ID $GERRIT_PATCHSET_REVISION $GERRIT_PROJECT
# A command or script which returns FOSSID result to Gerrit. It will receive from FOSSID Jenkins plugin the variable $FOSSID_SCAN_RESULT
#cmd_send_feedback_to_gerrit = ssh -p 29418 rdkgerritdev.stb.r53.xcal.tv gerrit review -p $GERRIT_PROJECT -m $FOSSID_SCAN_RESULT  $GERRIT_PATCHSET_REVISION
cmd_send_feedback_to_gerrit = bash $JENKINS_HOME/fossidscan_to_gerrit.sh
